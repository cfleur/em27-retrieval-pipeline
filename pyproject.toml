[tool.poetry]
name = "automated-retrieval-pipeline"
version = "0.1.0"
description = ""
authors = [
    "Moritz Makowski <moritz.makowski@tum.de>",
    "Andreas Luther <andreas.luther@tum.de>",
    "Marlon MÃ¼ller <marlon.mueller@tum.de>",
    "Dmytro Polityka <dmytro.polityka@tum.de>",
    "Vyas Giridhard <vyas.giridharan@tum.de>"
]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.9"
tum-esm-utils = "^1.0.0"
tum-esm-em27-metadata = "^1.0.0"

[tool.poetry.group.extract-retrieval-data.dependencies]
pydantic = "^1.10.4"
requests = "^2.28.2"
psycopg = "^3.1.8"
pandas = "^1.5.3"
rich = "^13.2.0"

[tool.poetry.group.fill-retrieval-database.dependencies]
pandas = "^1.5.3"
psycopg2-binary = "^2.9.5"
SQLAlchemy = "^1.4.46"
SQLAlchemy-Utils = "^0.39.0"

[tool.poetry.group.retrieval-state-report.dependencies]
matplotlib = "^3.6.3"
mdutils = "^1.4.0"
numpy = "^1.24.1"
pandas = "^1.5.3"
seaborn = "^0.12.2"

[tool.poetry.group.dev.dependencies]
black = "^22.12.0"
mypy = "^0.991"
pytest = "^7.2.1"
sqlalchemy-stubs = "^0.4"
types-sqlalchemy-utils = "^1.0.1"
types-requests = "^2.28.11.8"
pytest-cov = "^4.0.0"
types-tqdm = "^4.64.7.11"
python-dotenv = "^0.21.1"

[tool.poetry.group.download-vertical-profiles.dependencies]
pydantic = "^1.10.4"
requests = "^2.28.2"
rich = "^13.2.0"

[tool.poetry.group.automated-proffast-pylot.dependencies]
tqdm = "^4.64.1"
requests = "^2.28.2"
pytz = "^2022.7.1"
timezonefinder = "^6.1.9"
PyYAML = "^6.0"
pandas = "^1.5.3"
wheel = "^0.38.4"
rich = "^13.2.0"
Cerberus = "^1.3.4"
filelock = "^3.9.0"
pydantic = "^1.10.4"
psutil = "^5.9.4"
click = "^8.1.3"
checksumdir = "^1.2.0"
clint = "^0.5.1"
fortranformat = "^1.2.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
markers = [
    "ci: can be run in a CI environment",
    "integration: can only be run on a configured system",
]

[tool.mypy]
strict = true
implicit_reexport = true
no_warn_unused_ignores = true
plugins = ["pydantic.mypy"]

[[tool.mypy.overrides]]
module = [
    "src.prfpylot.prfpylot.pylot",
]
ignore_missing_imports = true
